# BUILD Settings:
# ##############################################################################
[build]
  command = "npm run build"
  publish = ".next"

# PLUGINS
# ##############################################################################

# Fetch vault plugin needs to come before any of the contextual environment
# variable plugins so they can act on the new vars.
[[plugins]]
  package = "netlify-plugin-vault-variables"
  [plugins.inputs]
    # The vault service endpoint
    endpoint = 'https://vault.stanford.edu'
    # Order doesn't matter here as these will be fetched asyncronously. Try not to have dupes.
    secrets = ['secret/data/projects/adapt/ood-giving-campaign']
    # Set which environment variables to use for the approle login
    secretId = 'VAULT_SECRET_ID'
    roleId = 'VAULT_ROLE_ID'

[[plugins]]
  package = '/plugins/netlify-plugin-contextual-auth'
  [plugins.inputs]
    username = 'Stanford'
    password = 'OnPurpose'
    context = ['branch-deploy', 'deploy-preview']
    file = '.next/_headers'

# Netlify Plugin Run last????
[[plugins]]
  package = "@netlify/plugin-nextjs"

# HEADERS
# ##############################################################################
[[headers]]
  for = "/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Content-Security-Policy = "default-src https: 'unsafe-inline' 'unsafe-eval'; form-action https:; img-src https: data:; frame-ancestors https://app.storyblok.com"
    X-Content-Type-Options = "nosniff"
    X-Robots-Tag = "noindex, nofollow"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000"
    Permissions-Policy = "vibrate=(), geolocation=(), midi=(), notifications=(), push=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), speaker=()"

[[redirects]]
  from = "/home"
  to = "/"
  status = 301
  force = true

# CONTEXTUAL PLUGINS
# ##############################################################################
# [[context.production.plugins]]
#   package = "netlify-plugin-submit-sitemap"
